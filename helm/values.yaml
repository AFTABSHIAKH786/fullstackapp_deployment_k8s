# Default values for userapp
# This is a YAML-formatted file.

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Namespace configuration
namespace:
  create: true
  name: userapp

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
  hosts:
    - host: userapp.local
      paths:
        - path: /
          pathType: Prefix
        - path: /api
          pathType: Prefix
        - path: /uploads
          pathType: Prefix
  tls: []

# Frontend configuration
frontend:
  enabled: true
  image:
    repository: userapp-frontend
    tag: latest
    pullPolicy: Never
  replicaCount: 2
  service:
    type: ClusterIP
    port: 3000
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  livenessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 30
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 5
    periodSeconds: 5
  config:
    REACT_APP_API_URL: http://backend-service:5000

# Backend configuration
backend:
  enabled: true
  image:
    repository: userapp-backend
    tag: latest
    pullPolicy: Never
  replicaCount: 2
  service:
    type: ClusterIP
    port: 5000
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  livenessProbe:
    httpGet:
      path: /api/health
      port: 5000
    initialDelaySeconds: 30
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /api/health
      port: 5000
    initialDelaySeconds: 5
    periodSeconds: 5
  config:
    DB_HOST: postgres-service
    DB_NAME: userdb
    DB_PORT: "5432"
    PORT: "5000"
  uploads:
    storage:
      type: emptyDir
      size: 1Gi

# PostgreSQL configuration
postgres:
  enabled: true
  image:
    repository: postgres
    tag: 15-alpine
    pullPolicy: IfNotPresent
  replicaCount: 1
  service:
    type: ClusterIP
    port: 5432
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  livenessProbe:
    exec:
      command:
        - pg_isready
        - -U
        - postgres
    initialDelaySeconds: 30
    periodSeconds: 10
  readinessProbe:
    exec:
      command:
        - pg_isready
        - -U
        - postgres
    initialDelaySeconds: 5
    periodSeconds: 5
  config:
    POSTGRES_DB: userdb
    POSTGRES_USER: postgres
  secret:
    POSTGRES_PASSWORD: password
  persistence:
    enabled: true
    storageClass: ""
    size: 8Gi
    accessMode: ReadWriteOnce 